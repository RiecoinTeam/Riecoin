.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH RIECOIN-TX "1" "January 2025" "riecoin-tx 2501" "User Commands"
.SH NAME
riecoin-tx \- manual page for riecoin-tx 2501
.SH SYNOPSIS
.B riecoin-tx
[\fI\,options\/\fR] \fI\,<hex-tx> \/\fR[\fI\,commands\/\fR]
.br
.B riecoin-tx
[\fI\,options\/\fR] \fI\,-create \/\fR[\fI\,commands\/\fR]
.SH DESCRIPTION
Riecoin Core riecoin\-tx utility version 2501
.PP
The riecoin\-tx tool is used for creating and modifying bitcoin transactions.
.PP
riecoin\-tx can be used with "<hex\-tx> [commands]" to update a hex\-encoded Riecoin transaction, or with "\-create [commands]" to create a hex\-encoded bitcoin transaction.
.SH OPTIONS
.HP
\fB\-create\fR
.IP
Create new, empty TX.
.HP
\fB\-help\fR
.IP
Print this help message and exit (also \fB\-h\fR or \-?)
.HP
\fB\-json\fR
.IP
Select JSON output
.HP
\fB\-txid\fR
.IP
Output only the hex\-encoded transaction id of the resultant transaction.
.HP
\fB\-version\fR
.IP
Print version and exit
.PP
Debugging/Testing options:
.PP
Chain selection options:
.HP
\fB\-chain=\fR<chain>
.IP
Use the chain <chain> (default: main). Allowed values: main, test,
regtest
.HP
\fB\-testnet\fR
.IP
Use the test chain. Equivalent to \fB\-chain\fR=\fI\,test\/\fR.
.PP
Commands:
.IP
delin=N
.IP
Delete input N from TX
.IP
delout=N
.IP
Delete output N from TX
.IP
in=TXID:VOUT(:SEQUENCE_NUMBER)
.IP
Add input to TX
.IP
locktime=N
.IP
Set TX lock time to N
.IP
nversion=N
.IP
Set TX version to N
.IP
outaddr=VALUE:ADDRESS
.IP
Add address\-based output to TX
.IP
outdata=[VALUE:]DATA
.IP
Add data\-based output to TX
.IP
outmultisig=VALUE:REQUIRED:PUBKEYS:PUBKEY1:PUBKEY2:....[:FLAGS]
.IP
Add Pay To n\-of\-m Multi\-sig output to TX. n = REQUIRED, m = PUBKEYS.
Optionally add the "W" flag to produce a
pay\-to\-witness\-script\-hash output. Optionally add the "S" flag to
wrap the output in a pay\-to\-script\-hash.
.IP
outpubkey=VALUE:PUBKEY[:FLAGS]
.IP
Add pay\-to\-pubkey output to TX. Optionally add the "W" flag to produce a
pay\-to\-witness\-pubkey\-hash output. Optionally add the "S" flag to
wrap the output in a pay\-to\-script\-hash.
.IP
outscript=VALUE:SCRIPT[:FLAGS]
.IP
Add raw script output to TX. Optionally add the "W" flag to produce a
pay\-to\-witness\-script\-hash output. Optionally add the "S" flag to
wrap the output in a pay\-to\-script\-hash.
.IP
replaceable(=N)
.IP
Sets Replace\-By\-Fee (RBF) opt\-in sequence number for input N. If N is
not provided, the command attempts to opt\-in all available inputs
for RBF. If the transaction has no inputs, this option is
ignored.
.IP
sign=SIGHASH\-FLAGS
.IP
Add zero or more signatures to transaction. This command requires JSON
registers:prevtxs=JSON object, privatekeys=JSON object. See
signrawtransactionwithkey docs for format of sighash flags, JSON
objects.
.PP
Register Commands:
.IP
load=NAME:FILENAME
.IP
Load JSON file FILENAME into register NAME
.IP
set=NAME:JSON\-STRING
.IP
Set register NAME to given JSON\-STRING
.SH COPYRIGHT
(C)  2009-2024 The Bitcoin Core developers
(C)  2013-2024 The Riecoin developers
 Riecoin Core 2501 (Dev) is based on Bitcoin Core (Master).
Please contribute if you find Riecoin Core useful. Visit <https://riecoin.xyz/>
for further information about the software.
The source code is available from <https://github.com/RiecoinTeam/Riecoin>.
Support us by starring our repositories!

 Riecoin Forum: <https://riecoin.xyz/Forum>
 Discord: <https://discord.gg/2sJEayC>
 X: <https://twitter.com/RiecoinDev>
 Reddit: <https://www.reddit.com/r/Riecoin/>

This is experimental software.
Distributed under the MIT software license, see the accompanying file COPYING
or <https://opensource.org/licenses/MIT>
.SH "SEE ALSO"
riecoind(1), riecoin-cli(1), riecoin-tx(1), riecoin-wallet(1), riecoin-qt(1)
